# Generated by Django 5.0.3 on 2024-04-04 04:25

import auths.models
import django.db.models.deletion
import shortuuid.django_fields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("auths", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Profile",
            fields=[
                (
                    "pid",
                    shortuuid.django_fields.ShortUUIDField(
                        alphabet="abcdefghijklmnopqrstuvqxyz",
                        length=7,
                        max_length=26,
                        prefix="",
                        primary_key=True,
                        serialize=False,
                        unique=True,
                    ),
                ),
                (
                    "cover",
                    models.ImageField(
                        blank=True,
                        default="avatar.jpg",
                        null=True,
                        upload_to=auths.models.upload_cover_location,
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True,
                        default="cover.jpg",
                        null=True,
                        upload_to=auths.models.upload_avatar_location,
                    ),
                ),
                ("phone", models.CharField(blank=True, max_length=10, null=True)),
                (
                    "gender",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("male", "Male"),
                            ("female", "Female"),
                            ("other", "Other"),
                        ],
                        max_length=6,
                        null=True,
                    ),
                ),
                ("height", models.FloatField(blank=True, null=True)),
                ("weight", models.FloatField(blank=True, null=True)),
                ("dob", models.DateField(blank=True, null=True)),
                ("about_me", models.CharField(blank=True, max_length=200, null=True)),
                ("bio", models.TextField(blank=True)),
                (
                    "relationship_status",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("single", "Single"),
                            ("married", "Married"),
                            ("divorced", "Divorced"),
                            ("widowed", "Widowed"),
                        ],
                        max_length=10,
                        null=True,
                    ),
                ),
                ("country", models.CharField(blank=True, max_length=50, null=True)),
                ("city", models.CharField(blank=True, max_length=50, null=True)),
                ("address", models.CharField(blank=True, max_length=100, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=6, null=True)),
                ("working_at", models.CharField(blank=True, max_length=100, null=True)),
                ("working_as", models.CharField(blank=True, max_length=100, null=True)),
                ("working_since", models.DateField(blank=True, null=True)),
                ("social_facebook", models.URLField(blank=True, null=True)),
                ("social_instagram", models.URLField(blank=True, null=True)),
                ("social_twitter", models.URLField(blank=True, null=True)),
                ("social_youtube", models.URLField(blank=True, null=True)),
                ("social_website", models.URLField(blank=True, null=True)),
                ("verified", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "blocked",
                    models.ManyToManyField(
                        blank=True, related_name="blocked", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "followers",
                    models.ManyToManyField(
                        blank=True,
                        related_name="followers",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "following",
                    models.ManyToManyField(
                        blank=True,
                        related_name="following",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "friends",
                    models.ManyToManyField(
                        blank=True, related_name="friends", to=settings.AUTH_USER_MODEL
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
        ),
    ]
